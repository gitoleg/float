open Core_kernel
open OUnit2
open Gfloat



let add64_cases = add, [
    0, Nearest_even, (-9, "-110"), (5, "8898"), (-7, "8897999999999999");
    1, Nearest_even, (-398, "6897236979490905"), (-398, "2256206718566404"), (-398, "9153443698057309");
    2, Nearest_even, (0, "0"), (0, "0"), (0, "0");
    3, Nearest_even, (-6, "-1111100100010010"), (-15, "-1001"), (-7, "-11111001000100100");
    4, Nearest_even, (-389, "0"), (295, "3705213447467451"), (295, "3705213447467451");
    (* 5, Nearest_even, (-382, "582741162754081"), (-796, "144115188075855872"), (-796, "288230376151711744"); *)
    6, Nearest_even, (-375, "0"), (259, "-731627321781413"), (258, "-7316273217814130");
    7, Nearest_even, (-19, "0"), (7, "9695899578786656"), (7, "9695899578786656");
    (* 8, Nearest_even, (368, "0"), (0, "0"), (-796, "288230376151711744"); *)
    (* 9, Nearest_even, (0, "0"), (0, "0"), (-796, "8935141660703064064"); *)
    10, Nearest_even, (-66, "-10000000"), (-60, "787955766967"), (-64, "7879557669570000");
    11, Nearest_even, (-17, "100000"), (-9, "99899999898988998"), (-8, "9989999989898900");
    (* 12, Nearest_even, (394, "100001"), (389, "-111000010"), (-796, "8935141660703064064"); *)
    13, Nearest_even, (263, "10000"), (-197, "0"), (252, "1000000000000000");
    (* 14, Nearest_even, (378, "-100010010100101"), (383, "4588654244484776"), (-796, "8935141660703064064"); *)
    15, Nearest_even, (-13, "-10011"), (12, "-98898889999898989"), (13, "-9889888999989899");
    16, Nearest_even, (-206, "101101000"), (-136, "10010000011"), (-141, "1001000001100000");
    17, Nearest_even, (-8, "-10111011011010110101"), (-15, "-67696968885699597"), (-4, "-1011101101777981");
    18, Nearest_even, (-12, "-10111111000101"), (-3, "978554469"), (-10, "9785443578889999");
    19, Nearest_even, (-302, "-10"), (280, "100000"), (270, "1000000000000000");
    20, Nearest_even, (-3, "-1100000"), (-18, "9758785579577658555"), (-12, "-1090241214420422");
    21, Nearest_even, (256, "-111010000110000101"), (-251, "100100"), (258, "-1110100001100001");
    22, Nearest_even, (-161, "0"), (347, "0"), (-161, "0");
    23, Nearest_even, (367, "1"), (369, "-1000000000000000"), (369, "-1000000000000000");
    24, Nearest_even, (397, "-1"), (386, "78787888899688897"), (-796, "8935141660703064064");
    25, Nearest_even, (-132, "134449050250383"), (-366, "563018672939008"), (-133, "1344490502503830");
    26, Nearest_even, (-19, "22982295752779357453"), (-1, "9669768567767"), (-4, "9669768567789982");
    27, Nearest_even, (-304, "234885884424996"), (-302, "99998989899989988"), (-300, "1000013387588342");
    28, Nearest_even, (-108, "0"), (-272, "-9162018237824542"), (-272, "-9162018237824542");
    29, Nearest_even, (391, "276756636"), (392, "-7775588857667"), (-796, "8935141660703064064");
    30, Nearest_even, (114, "1094681428471873"), (111, "-9006649196412927"), (114, "1085674779275460");
    31, Nearest_even, (374, "43996442468362238"), (391, "-1000101000"), (-796, "8935141660703064064");
    32, Nearest_even, (3, "43"), (-4, "0"), (-4, "430000000");
    33, Nearest_even, (-79, "449282349474"), (-289, "5588689955"), (-83, "4492823494740000");
    34, Nearest_even, (-23, "-4988668"), (-14, "-98989999"), (-22, "-9898999900498867");
    35, Nearest_even, (200, "7158258771631972"), (-23, "9700834512851292"), (200, "7158258771631972");
    36, Nearest_even, (12, "-524599882675298"), (-20, "89999988888998"), (11, "-5245998826752980");
    37, Nearest_even, (-362, "529222"), (329, "-9454467399689"), (326, "-9454467399689000");
    38, Nearest_even, (-8, "-55568"), (5, "9868"), (-7, "9867999999994443");
    39, Nearest_even, (5, "55797"), (-8, "97786"), (-6, "5579700000000978");
    40, Nearest_even, (289, "0"), (-317, "0"), (-317, "0");
    41, Nearest_even, (18, "566955856656678778"), (-26, "-98888988898998989899"), (20, "5669558566566788");
    42, Nearest_even, (325, "56865675656676888"), (355, "-1000"), (342, "-9999999999999999");
    43, Nearest_even, (-367, "0"), (-144, "0"), (-367, "0");
    44, Nearest_even, (-272, "9165034657287864"), (369, "-9007194959771389"), (369, "-9007194959771389");
    45, Nearest_even, (4, "65695"), (-8, "-98998"), (-7, "6569499999990100");
    46, Nearest_even, (-84, "65767599878579869898"), (-293, "8898898999"), (-80, "6576759987857987");
    47, Nearest_even, (-9, "665886975795"), (0, "-37825797469566"), (-2, "-3782579746890011");
    48, Nearest_even, (-1, "688795599875588"), (-3, "698898555996"), (-2, "6888025888611480");
    49, Nearest_even, (-11, "-75432999387568436725"), (0, "-735437544799935588"), (2, "-7354375455542656");
    50, Nearest_even, (-398, "-1237504858554372"), (-390, "2105344"), (-398, "-1026970458554372");
    51, Nearest_even, (-397, "-137438969856"), (-366, "1"), (-381, "1000000000000000");
    52, Nearest_even, (397, "82253794294537886728"), (382, "-99695987675688886589"), (-796, "8935141660703064064");
    53, Nearest_even, (-381, "-2863703907286225"), (-382, "8615920154971963"), (-381, "-2002111891789029");
    54, Nearest_even, (388, "-87878958998"), (384, "7887"), (-796, "8935141660703064064");
    55, Nearest_even, (-312, "88998889989989"), (192, "-692422664874538522"), (194, "-6924226648745385");
    56, Nearest_even, (-5, "-8899888"), (-5, "82934472424356387434"), (-1, "8293447242434749");
    57, Nearest_even, (-334, "-889989998899"), (151, "-1"), (136, "-1000000000000000");
    58, Nearest_even, (-9, "-898889899998"), (-3, "494258438536"), (-7, "4942575396461000");
    59, Nearest_even, (-3, "-8988998"), (-14, "-968473665643883"), (-12, "-8998682736656439");
    60, Nearest_even, (-2, "8989889999898998"), (-8, "1011111000111111101"), (-2, "8990901110899109");
    61, Nearest_even, (395, "8989898998888999"), (396, "-989"), (-796, "8935141660703064064");
    62, Nearest_even, (5, "89989"), (-8, "3883"), (-6, "8998900000000039");
    63, Nearest_even, (-318, "0"), (168, "-5792352116864640"), (168, "-5792352116864640");
    64, Nearest_even, (5, "-8"), (2, "2737"), (2, "-5263");
    65, Nearest_even, (-373, "-9252553656432"), (-123, "10110000"), (-131, "1011000000000000");
    66, Nearest_even, (-13, "-96658887796668"), (-1, "8697858"), (-10, "8697761341112203");
    67, Nearest_even, (261, "-98696677"), (-276, "-10111000001011111"), (253, "-9869667700000000");
    68, Nearest_even, (3, "-98855"), (-9, "-85588"), (-8, "-9885500000008559");
    69, Nearest_even, (-8, "98989"), (4, "98998"), (-7, "9899800000009899");
    70, Nearest_even, (-2, "998988989888988999"), (-4, "-88988888"), (0, "9989889898880991");
    71, Nearest_even, (5, "-9998"), (-8, "-97588"), (-7, "-9998000000009759");
    72, Nearest_even, (170, "-99998"), (154, "-110110101000010010"), (160, "-1000090110101000");
    73, Nearest_even, (-175, "-7572966179589751"), (-160, "-1089779321462003"), (-160, "-1089779321462011");
    74, Nearest_even, (-30, "0"), (189, "8915833240498900"), (189, "8915833240498900");
    75, Nearest_even, (23, "-6528062615241865"), (-104, "0"), (23, "-6528062615241865");
    76, Nearest_even, (99, "-6875194536753715"), (99, "-7722392310771030"), (100, "-1459758684752474");
    77, Nearest_even, (113, "-9007199254739967"), (124, "147373213929989"), (123, "1473732138399170");
    78, Nearest_even, (305, "0"), (313, "4909375315359657"), (313, "4909375315359657");
    79, Nearest_even, (335, "-1687715983116791"), (182, "1413983374431232"), (335, "-1687715983116791");
    80, Nearest_even, (369, "-8989607068696542"), (369, "-6040049583818513"), (-796, "576460752303423488");
    81, Nearest_even, (-295, "0"), (12, "8300835865810744"), (12, "8300835865810744");
    82, Nearest_even, (-201, "0"), (-398, "0"), (-398, "0");
    83, Nearest_even, (-156, "0"), (-154, "4662671880604793"), (-154, "4662671880604793");
    84, Nearest_even, (88, "-9061807302349661"), (164, "0"), (88, "-9061807302349661");
    85, Nearest_even, (113, "0"), (-82, "-5272949458960094"), (-82, "-5272949458960094");
    86, Nearest_even, (189, "0"), (194, "0"), (189, "0");
    87, Nearest_even, (299, "0"), (257, "0"), (257, "0");
    88, Nearest_even, (-796, "576460752303423488"), (192, "5996195315296320"), (-796, "576460752303423488");
    89, Nearest_even, (-796, "432345564227567616"), (-796, "576460752303423488"), (-796, "576460752303423488");
    90, Nearest_even, (-796, "576460752303423488"), (-796, "144115188075855872"), (-796, "288230376151711744");
    91, Nearest_even, (-796, "432345564227567616"), (-796, "8646911284551352320"), (-796, "8935141660703064064");
    92, Nearest_even, (-796, "287855929961688187"), (-398, "-1717987205347"), (-796, "287855929961688187");
    93, Nearest_even, (-796, "144115188075855872"), (66, "-8357450690644964"), (-796, "288230376151711744");
    94, Nearest_even, (0, "0"), (0, "0"), (-796, "8646911284551352320");
    95, Nearest_even, (0, "0"), (0, "0"), (-796, "576460752303423488");
    96, Nearest_even, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    97, Nearest_even, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    98, Nearest_even, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    99, Nearest_even, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    100, Nearest_even, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    101, Nearest_even, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    102, Negative_inf, (-9, "-110"), (5, "8898"), (-7, "8897999999999998");
    103, Negative_inf, (-6, "-1111100100010010"), (-15, "-1001"), (-6, "-1111100100010011");
    104, Negative_inf, (-389, "0"), (295, "3705213447467451"), (295, "3705213447467451");
    105, Negative_inf, (-375, "0"), (259, "-731627321781413"), (258, "-7316273217814130");
    106, Negative_inf, (-19, "0"), (7, "9695899578786656"), (7, "9695899578786656");
    107, Negative_inf, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    108, Negative_inf, (-66, "-10000000"), (-60, "787955766967"), (-64, "7879557669570000");
    109, Negative_inf, (-17, "100000"), (-9, "99899999898988998"), (-8, "9989999989898900");
    110, Negative_inf, (394, "100001"), (389, "-111000010"), (-796, "8935141660703064064");
    111, Negative_inf, (263, "10000"), (-197, "0"), (252, "1000000000000000");
    112, Negative_inf, (378, "-100010010100101"), (383, "4588654244484776"), (-796, "8935141660703064064");
    113, Negative_inf, (-13, "-10011"), (12, "-98898889999898989"), (13, "-9889888999989900");
    114, Negative_inf, (-206, "101101000"), (-136, "10010000011"), (-141, "1001000001100000");
    115, Negative_inf, (-8, "-10111011011010110101"), (-15, "-67696968885699597"), (-4, "-1011101101777981");
    116, Negative_inf, (-12, "-10111111000101"), (-3, "978554469"), (-10, "9785443578889998");
    117, Negative_inf, (-302, "-10"), (280, "100000"), (269, "9999999999999999");
    118, Negative_inf, (-3, "-1100000"), (-18, "9758785579577658555"), (-12, "-1090241214420423");
    119, Negative_inf, (256, "-111010000110000101"), (-251, "100100"), (258, "-1110100001100001");
    120, Negative_inf, (-161, "0"), (347, "0"), (-161, "0");
    121, Negative_inf, (-385, "-1"), (369, "-9999999999999999"), (-796, "576460752303423488");
    122, Negative_inf, (397, "-1"), (386, "78787888899688897"), (-796, "8935141660703064064");
    123, Negative_inf, (-19, "22982295752779357453"), (-1, "9669768567767"), (-4, "9669768567789982");
    124, Negative_inf, (-108, "0"), (-272, "-9162018237824542"), (-272, "-9162018237824542");
    125, Negative_inf, (391, "276756636"), (392, "-7775588857667"), (-796, "8935141660703064064");
    126, Negative_inf, (114, "1"), (4, "-822378997465409"), (98, "9999999999999999");
    127, Negative_inf, (374, "43996442468362238"), (391, "-1000101000"), (-796, "8935141660703064064");
    128, Negative_inf, (3, "43"), (-4, "0"), (-4, "430000000");
    129, Negative_inf, (-79, "449282349474"), (-289, "5588689955"), (-83, "4492823494740000");
    130, Negative_inf, (-23, "-4988668"), (-14, "-98989999"), (-22, "-9898999900498867");
    131, Negative_inf, (200, "7158258771631972"), (-23, "9700834512851292"), (200, "7158258771631972");
    132, Negative_inf, (12, "-524599882675298"), (-20, "89999988888998"), (11, "-5245998826752980");
    133, Negative_inf, (-362, "529222"), (329, "-9454467399689"), (326, "-9454467399689000");
    134, Negative_inf, (-8, "-55568"), (5, "9868"), (-7, "9867999999994443");
    135, Negative_inf, (5, "55797"), (-8, "97786"), (-6, "5579700000000977");
    136, Negative_inf, (289, "0"), (-317, "0"), (-317, "0");
    137, Negative_inf, (18, "566955856656678778"), (-26, "-98888988898998989899"), (20, "5669558566566787");
    138, Negative_inf, (365, "8831138453512191"), (-45, "-6551550555506846"), (365, "8831138453512190");
    139, Negative_inf, (369, "9002800995368631"), (369, "9007156036628351"), (369, "9999999999999999");
    140, Negative_inf, (-367, "0"), (-144, "0"), (-367, "0");
    141, Negative_inf, (4, "65695"), (-8, "-98998"), (-7, "6569499999990100");
    142, Negative_inf, (-84, "65767599878579869898"), (-293, "8898898999"), (-80, "6576759987857987");
    143, Negative_inf, (-9, "665886975795"), (0, "-37825797469566"), (-2, "-3782579746890012");
    144, Negative_inf, (-1, "688795599875588"), (-3, "698898555996"), (-2, "6888025888611479");
    145, Negative_inf, (-11, "-75432999387568436725"), (0, "-735437544799935588"), (2, "-7354375455542656");
    146, Negative_inf, (-397, "-137438969856"), (-366, "1"), (-382, "9999999999999999");
    147, Negative_inf, (397, "82253794294537886728"), (382, "-99695987675688886589"), (-796, "8935141660703064064");
    148, Negative_inf, (388, "-87878958998"), (384, "7887"), (-796, "8935141660703064064");
    149, Negative_inf, (-312, "88998889989989"), (192, "-692422664874538522"), (194, "-6924226648745385");
    150, Negative_inf, (-5, "-8899888"), (-5, "82934472424356387434"), (-1, "8293447242434749");
    151, Negative_inf, (-334, "-889989998899"), (151, "-1"), (136, "-1000000000000001");
    152, Negative_inf, (-9, "-898889899998"), (-3, "494258438536"), (-7, "4942575396461000");
    153, Negative_inf, (-3, "-8988998"), (-14, "-968473665643883"), (-12, "-8998682736656439");
    154, Negative_inf, (-2, "8989889999898998"), (-8, "1011111000111111101"), (-2, "8990901110899109");
    155, Negative_inf, (395, "8989898998888999"), (396, "-989"), (-796, "8935141660703064064");
    156, Negative_inf, (5, "89989"), (-8, "3883"), (-6, "8998900000000038");
    157, Negative_inf, (-318, "0"), (168, "-5792352116864640"), (168, "-5792352116864640");
    158, Negative_inf, (5, "-8"), (2, "2737"), (2, "-5263");
    159, Negative_inf, (-373, "-9252553656432"), (-123, "10110000"), (-131, "1010999999999999");
    160, Negative_inf, (-13, "-96658887796668"), (-1, "8697858"), (-10, "8697761341112203");
    161, Negative_inf, (261, "-98696677"), (-276, "-10111000001011111"), (253, "-9869667700000001");
    162, Negative_inf, (3, "-98855"), (-9, "-85588"), (-8, "-9885500000008559");
    163, Negative_inf, (-8, "98989"), (4, "98998"), (-7, "9899800000009898");
    164, Negative_inf, (-2, "998988989888988999"), (-4, "-88988888"), (0, "9989889898880991");
    165, Negative_inf, (5, "-9998"), (-8, "-97588"), (-7, "-9998000000009759");
    166, Negative_inf, (-30, "0"), (189, "8915833240498900"), (189, "8915833240498900");
    167, Negative_inf, (23, "-6528062615241865"), (-104, "0"), (23, "-6528062615241865");
    168, Negative_inf, (113, "-9007199254739967"), (124, "147373213929989"), (123, "1473732138399170");
    169, Negative_inf, (305, "0"), (313, "4909375315359657"), (313, "4909375315359657");
    170, Negative_inf, (335, "-1687715983116791"), (182, "1413983374431232"), (335, "-1687715983116791");
    171, Negative_inf, (369, "-8989607068696542"), (369, "-6040049583818513"), (-796, "576460752303423488");
    172, Negative_inf, (-156, "0"), (-154, "4662671880604793"), (-154, "4662671880604793");
    173, Negative_inf, (0, "0"), (0, "0"), (-796, "8646911284551352320");
    174, Negative_inf, (0, "0"), (0, "0"), (-796, "576460752303423488");
    175, Negative_inf, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    176, Negative_inf, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    177, Negative_inf, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    178, Negative_inf, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    179, Negative_inf, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    180, Negative_inf, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    181, Positive_inf, (-9, "-110"), (5, "8898"), (-7, "8897999999999999");
    182, Positive_inf, (-6, "-1111100100010010"), (-15, "-1001"), (-6, "-1111100100010010");
    183, Positive_inf, (-389, "0"), (295, "3705213447467451"), (295, "3705213447467451");
    184, Positive_inf, (-375, "0"), (259, "-731627321781413"), (258, "-7316273217814130");
    185, Positive_inf, (-19, "0"), (7, "9695899578786656"), (7, "9695899578786656");
    186, Positive_inf, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    187, Positive_inf, (-66, "-10000000"), (-60, "787955766967"), (-64, "7879557669570000");
    188, Positive_inf, (-17, "100000"), (-9, "99899999898988998"), (-8, "9989999989898901");
    189, Positive_inf, (394, "100001"), (389, "-111000010"), (-796, "8935141660703064064");
    190, Positive_inf, (263, "10000"), (-197, "0"), (252, "1000000000000000");
    191, Positive_inf, (378, "-100010010100101"), (383, "4588654244484776"), (-796, "8935141660703064064");
    192, Positive_inf, (-13, "-10011"), (12, "-98898889999898989"), (13, "-9889888999989899");
    193, Positive_inf, (-206, "101101000"), (-136, "10010000011"), (-141, "1001000001100001");
    194, Positive_inf, (-8, "-10111011011010110101"), (-15, "-67696968885699597"), (-4, "-1011101101777980");
    195, Positive_inf, (-12, "-10111111000101"), (-3, "978554469"), (-10, "9785443578889999");
    196, Positive_inf, (-302, "-10"), (280, "100000"), (270, "1000000000000000");
    197, Positive_inf, (-3, "-1100000"), (-18, "9758785579577658555"), (-12, "-1090241214420422");
    198, Positive_inf, (256, "-111010000110000101"), (-251, "100100"), (258, "-1110100001100000");
    199, Positive_inf, (-161, "0"), (347, "0"), (-161, "0");
    200, Positive_inf, (367, "1"), (369, "9999999999999999"), (-796, "8646911284551352320");
    201, Positive_inf, (397, "-1"), (386, "78787888899688897"), (-796, "8935141660703064064");
    202, Positive_inf, (-19, "22982295752779357453"), (-1, "9669768567767"), (-4, "9669768567789983");
    203, Positive_inf, (-108, "0"), (-272, "-9162018237824542"), (-272, "-9162018237824542");
    204, Positive_inf, (391, "276756636"), (392, "-7775588857667"), (-796, "8935141660703064064");
    205, Positive_inf, (374, "43996442468362238"), (391, "-1000101000"), (-796, "8935141660703064064");
    206, Positive_inf, (3, "43"), (-4, "0"), (-4, "430000000");
    207, Positive_inf, (-79, "449282349474"), (-289, "5588689955"), (-83, "4492823494740001");
    208, Positive_inf, (-23, "-4988668"), (-14, "-98989999"), (-22, "-9898999900498866");
    209, Positive_inf, (200, "7158258771631972"), (-23, "9700834512851292"), (200, "7158258771631973");
    210, Positive_inf, (12, "-524599882675298"), (-20, "89999988888998"), (11, "-5245998826752979");
    211, Positive_inf, (-362, "529222"), (329, "-9454467399689"), (326, "-9454467399688999");
    212, Positive_inf, (-8, "-55568"), (5, "9868"), (-7, "9867999999994444");
    213, Positive_inf, (5, "55797"), (-8, "97786"), (-6, "5579700000000978");
    214, Positive_inf, (289, "0"), (-317, "0"), (-317, "0");
    215, Positive_inf, (18, "566955856656678778"), (-26, "-98888988898998989899"), (20, "5669558566566788");
    216, Positive_inf, (4, "65695"), (-8, "-98998"), (-7, "6569499999990101");
    217, Positive_inf, (-84, "65767599878579869898"), (-293, "8898898999"), (-80, "6576759987857988");
    218, Positive_inf, (-9, "665886975795"), (0, "-37825797469566"), (-2, "-3782579746890011");
    219, Positive_inf, (-1, "688795599875588"), (-3, "698898555996"), (-2, "6888025888611480");
    220, Positive_inf, (-11, "-75432999387568436725"), (0, "-735437544799935588"), (2, "-7354375455542655");
    221, Positive_inf, (397, "82253794294537886728"), (382, "-99695987675688886589"), (-796, "8935141660703064064");
    222, Positive_inf, (-381, "-2863703907286225"), (-382, "8615920154971963"), (-381, "-2002111891789028");
    223, Positive_inf, (388, "-87878958998"), (384, "7887"), (-796, "8935141660703064064");
    224, Positive_inf, (-312, "88998889989989"), (192, "-692422664874538522"), (194, "-6924226648745384");
    225, Positive_inf, (-5, "-8899888"), (-5, "82934472424356387434"), (-1, "8293447242434750");
    226, Positive_inf, (-334, "-889989998899"), (151, "-1"), (136, "-1000000000000000");
    227, Positive_inf, (-9, "-898889899998"), (-3, "494258438536"), (-7, "4942575396461001");
    228, Positive_inf, (-3, "-8988998"), (-14, "-968473665643883"), (-12, "-8998682736656438");
    229, Positive_inf, (-2, "8989889999898998"), (-8, "1011111000111111101"), (-2, "8990901110899110");
    230, Positive_inf, (395, "8989898998888999"), (396, "-989"), (-796, "8935141660703064064");
    231, Positive_inf, (5, "89989"), (-8, "3883"), (-6, "8998900000000039");
    232, Positive_inf, (-318, "0"), (168, "-5792352116864640"), (168, "-5792352116864640");
    233, Positive_inf, (5, "-8"), (2, "2737"), (2, "-5263");
    234, Positive_inf, (-373, "-9252553656432"), (-123, "10110000"), (-131, "1011000000000000");
    235, Positive_inf, (-13, "-96658887796668"), (-1, "8697858"), (-10, "8697761341112204");
    236, Positive_inf, (261, "-98696677"), (-276, "-10111000001011111"), (253, "-9869667700000000");
    237, Positive_inf, (3, "-98855"), (-9, "-85588"), (-8, "-9885500000008558");
    238, Positive_inf, (-8, "98989"), (4, "98998"), (-7, "9899800000009899");
    239, Positive_inf, (-2, "998988989888988999"), (-4, "-88988888"), (0, "9989889898880992");
    240, Positive_inf, (5, "-9998"), (-8, "-97588"), (-7, "-9998000000009758");
    241, Positive_inf, (186, "9999999999999999"), (23, "1"), (187, "1000000000000000");
    242, Positive_inf, (-30, "0"), (189, "8915833240498900"), (189, "8915833240498900");
    243, Positive_inf, (23, "-6528062615241865"), (-104, "0"), (23, "-6528062615241865");
    244, Positive_inf, (113, "-9007199254739967"), (124, "147373213929989"), (123, "1473732138399171");
    245, Positive_inf, (232, "-3923757825832080"), (223, "-9837644979065930"), (232, "-3923757835669724");
    246, Positive_inf, (305, "0"), (313, "4909375315359657"), (313, "4909375315359657");
    247, Positive_inf, (335, "-1687715983116791"), (182, "1413983374431232"), (335, "-1687715983116790");
    248, Positive_inf, (369, "-8989607068696542"), (369, "-6040049583818513"), (369, "-9999999999999999");
    249, Positive_inf, (-156, "0"), (-154, "4662671880604793"), (-154, "4662671880604793");
    250, Positive_inf, (0, "0"), (0, "0"), (-796, "8646911284551352320");
    251, Positive_inf, (0, "0"), (0, "0"), (-796, "576460752303423488");
    252, Positive_inf, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    253, Positive_inf, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    254, Positive_inf, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    255, Positive_inf, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    256, Positive_inf, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    257, Positive_inf, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    258, Towards_zero, (-9, "-110"), (5, "8898"), (-7, "8897999999999998");
    259, Towards_zero, (-6, "-1111100100010010"), (-15, "-1001"), (-6, "-1111100100010010");
    260, Towards_zero, (-389, "0"), (295, "3705213447467451"), (295, "3705213447467451");
    261, Towards_zero, (-375, "0"), (259, "-731627321781413"), (258, "-7316273217814130");
    262, Towards_zero, (-19, "0"), (7, "9695899578786656"), (7, "9695899578786656");
    263, Towards_zero, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    264, Towards_zero, (-66, "-10000000"), (-60, "787955766967"), (-64, "7879557669570000");
    265, Towards_zero, (-17, "100000"), (-9, "99899999898988998"), (-8, "9989999989898900");
    266, Towards_zero, (394, "100001"), (389, "-111000010"), (-796, "8935141660703064064");
    267, Towards_zero, (263, "10000"), (-197, "0"), (252, "1000000000000000");
    268, Towards_zero, (378, "-100010010100101"), (383, "4588654244484776"), (-796, "8935141660703064064");
    269, Towards_zero, (-13, "-10011"), (12, "-98898889999898989"), (13, "-9889888999989899");
    270, Towards_zero, (-206, "101101000"), (-136, "10010000011"), (-141, "1001000001100000");
    271, Towards_zero, (-8, "-10111011011010110101"), (-15, "-67696968885699597"), (-4, "-1011101101777980");
    272, Towards_zero, (-12, "-10111111000101"), (-3, "978554469"), (-10, "9785443578889998");
    273, Towards_zero, (-302, "-10"), (280, "100000"), (269, "9999999999999999");
    274, Towards_zero, (-3, "-1100000"), (-18, "9758785579577658555"), (-12, "-1090241214420422");
    275, Towards_zero, (256, "-111010000110000101"), (-251, "100100"), (258, "-1110100001100000");
    276, Towards_zero, (-161, "0"), (347, "0"), (-161, "0");
    277, Towards_zero, (397, "-1"), (386, "78787888899688897"), (-796, "8935141660703064064");
    278, Towards_zero, (-19, "22982295752779357453"), (-1, "9669768567767"), (-4, "9669768567789982");
    279, Towards_zero, (-108, "0"), (-272, "-9162018237824542"), (-272, "-9162018237824542");
    280, Towards_zero, (391, "276756636"), (392, "-7775588857667"), (-796, "8935141660703064064");
    281, Towards_zero, (114, "1"), (4, "-822378997465409"), (98, "9999999999999999");
    282, Towards_zero, (374, "43996442468362238"), (391, "-1000101000"), (-796, "8935141660703064064");
    283, Towards_zero, (3, "43"), (-4, "0"), (-4, "430000000");
    284, Towards_zero, (-79, "449282349474"), (-289, "5588689955"), (-83, "4492823494740000");
    285, Towards_zero, (-23, "-4988668"), (-14, "-98989999"), (-22, "-9898999900498866");
    286, Towards_zero, (200, "7158258771631972"), (-23, "9700834512851292"), (200, "7158258771631972");
    287, Towards_zero, (12, "-524599882675298"), (-20, "89999988888998"), (11, "-5245998826752979");
    288, Towards_zero, (-362, "529222"), (329, "-9454467399689"), (326, "-9454467399688999");
    289, Towards_zero, (-8, "-55568"), (5, "9868"), (-7, "9867999999994443");
    290, Towards_zero, (5, "55797"), (-8, "97786"), (-6, "5579700000000977");
    291, Towards_zero, (289, "0"), (-317, "0"), (-317, "0");
    292, Towards_zero, (18, "566955856656678778"), (-26, "-98888988898998989899"), (20, "5669558566566787");
    293, Towards_zero, (4, "65695"), (-8, "-98998"), (-7, "6569499999990100");
    294, Towards_zero, (-84, "65767599878579869898"), (-293, "8898898999"), (-80, "6576759987857987");
    295, Towards_zero, (-9, "665886975795"), (0, "-37825797469566"), (-2, "-3782579746890011");
    296, Towards_zero, (-1, "688795599875588"), (-3, "698898555996"), (-2, "6888025888611479");
    297, Towards_zero, (-11, "-75432999387568436725"), (0, "-735437544799935588"), (2, "-7354375455542655");
    298, Towards_zero, (397, "82253794294537886728"), (382, "-99695987675688886589"), (-796, "8935141660703064064");
    299, Towards_zero, (388, "-87878958998"), (384, "7887"), (-796, "8935141660703064064");
    300, Towards_zero, (-312, "88998889989989"), (192, "-692422664874538522"), (194, "-6924226648745384");
    301, Towards_zero, (-5, "-8899888"), (-5, "82934472424356387434"), (-1, "8293447242434749");
    302, Towards_zero, (-334, "-889989998899"), (151, "-1"), (136, "-1000000000000000");
    303, Towards_zero, (-9, "-898889899998"), (-3, "494258438536"), (-7, "4942575396461000");
    304, Towards_zero, (-3, "-8988998"), (-14, "-968473665643883"), (-12, "-8998682736656438");
    305, Towards_zero, (-2, "8989889999898998"), (-8, "1011111000111111101"), (-2, "8990901110899109");
    306, Towards_zero, (395, "8989898998888999"), (396, "-989"), (-796, "8935141660703064064");
    307, Towards_zero, (5, "89989"), (-8, "3883"), (-6, "8998900000000038");
    308, Towards_zero, (-318, "0"), (168, "-5792352116864640"), (168, "-5792352116864640");
    309, Towards_zero, (5, "-8"), (2, "2737"), (2, "-5263");
    310, Towards_zero, (-373, "-9252553656432"), (-123, "10110000"), (-131, "1010999999999999");
    311, Towards_zero, (-13, "-96658887796668"), (-1, "8697858"), (-10, "8697761341112203");
    312, Towards_zero, (261, "-98696677"), (-276, "-10111000001011111"), (253, "-9869667700000000");
    313, Towards_zero, (3, "-98855"), (-9, "-85588"), (-8, "-9885500000008558");
    314, Towards_zero, (-8, "98989"), (4, "98998"), (-7, "9899800000009898");
    315, Towards_zero, (-2, "998988989888988999"), (-4, "-88988888"), (0, "9989889898880991");
    316, Towards_zero, (5, "-9998"), (-8, "-97588"), (-7, "-9998000000009758");
    317, Towards_zero, (-30, "0"), (189, "8915833240498900"), (189, "8915833240498900");
    318, Towards_zero, (23, "-6528062615241865"), (-104, "0"), (23, "-6528062615241865");
    319, Towards_zero, (305, "0"), (313, "4909375315359657"), (313, "4909375315359657");
    320, Towards_zero, (335, "-1687715983116791"), (182, "1413983374431232"), (335, "-1687715983116790");
    321, Towards_zero, (369, "-8989607068696542"), (369, "-6040049583818513"), (369, "-9999999999999999");
    322, Towards_zero, (0, "0"), (0, "0"), (-796, "8646911284551352320");
    323, Towards_zero, (0, "0"), (0, "0"), (-796, "576460752303423488");
    324, Towards_zero, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    325, Towards_zero, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    326, Towards_zero, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    327, Towards_zero, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    328, Towards_zero, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    329, Towards_zero, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    330, Nearest_away, (-9, "-110"), (5, "8898"), (-7, "8897999999999999");
    331, Nearest_away, (-6, "-1111100100010010"), (-15, "-1001"), (-6, "-1111100100010010");
    332, Nearest_away, (-389, "0"), (295, "3705213447467451"), (295, "3705213447467451");
    333, Nearest_away, (-375, "0"), (259, "-731627321781413"), (258, "-7316273217814130");
    334, Nearest_away, (-19, "0"), (7, "9695899578786656"), (7, "9695899578786656");
    335, Nearest_away, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    336, Nearest_away, (-66, "-10000000"), (-60, "787955766967"), (-64, "7879557669570000");
    337, Nearest_away, (-17, "100000"), (-9, "99899999898988998"), (-8, "9989999989898900");
    338, Nearest_away, (394, "100001"), (389, "-111000010"), (-796, "8935141660703064064");
    339, Nearest_away, (263, "10000"), (-197, "0"), (252, "1000000000000000");
    340, Nearest_away, (378, "-100010010100101"), (383, "4588654244484776"), (-796, "8935141660703064064");
    341, Nearest_away, (-13, "-10011"), (12, "-98898889999898989"), (13, "-9889888999989899");
    342, Nearest_away, (-206, "101101000"), (-136, "10010000011"), (-141, "1001000001100000");
    343, Nearest_away, (-8, "-10111011011010110101"), (-15, "-67696968885699597"), (-4, "-1011101101777981");
    344, Nearest_away, (-12, "-10111111000101"), (-3, "978554469"), (-10, "9785443578889999");
    345, Nearest_away, (-302, "-10"), (280, "100000"), (270, "1000000000000000");
    346, Nearest_away, (-3, "-1100000"), (-18, "9758785579577658555"), (-12, "-1090241214420422");
    347, Nearest_away, (256, "-111010000110000101"), (-251, "100100"), (258, "-1110100001100001");
    348, Nearest_away, (-161, "0"), (347, "0"), (-161, "0");
    349, Nearest_away, (397, "-1"), (386, "78787888899688897"), (-796, "8935141660703064064");
    350, Nearest_away, (-19, "22982295752779357453"), (-1, "9669768567767"), (-4, "9669768567789982");
    351, Nearest_away, (-108, "0"), (-272, "-9162018237824542"), (-272, "-9162018237824542");
    352, Nearest_away, (391, "276756636"), (392, "-7775588857667"), (-796, "8935141660703064064");
    353, Nearest_away, (374, "43996442468362238"), (391, "-1000101000"), (-796, "8935141660703064064");
    354, Nearest_away, (3, "43"), (-4, "0"), (-4, "430000000");
    355, Nearest_away, (-79, "449282349474"), (-289, "5588689955"), (-83, "4492823494740000");
    356, Nearest_away, (-23, "-4988668"), (-14, "-98989999"), (-22, "-9898999900498867");
    357, Nearest_away, (200, "7158258771631972"), (-23, "9700834512851292"), (200, "7158258771631972");
    358, Nearest_away, (12, "-524599882675298"), (-20, "89999988888998"), (11, "-5245998826752980");
    359, Nearest_away, (-362, "529222"), (329, "-9454467399689"), (326, "-9454467399689000");
    360, Nearest_away, (-8, "-55568"), (5, "9868"), (-7, "9867999999994443");
    361, Nearest_away, (5, "55797"), (-8, "97786"), (-6, "5579700000000978");
    362, Nearest_away, (289, "0"), (-317, "0"), (-317, "0");
    363, Nearest_away, (18, "566955856656678778"), (-26, "-98888988898998989899"), (20, "5669558566566788");
    364, Nearest_away, (4, "65695"), (-8, "-98998"), (-7, "6569499999990100");
    365, Nearest_away, (-84, "65767599878579869898"), (-293, "8898898999"), (-80, "6576759987857987");
    366, Nearest_away, (-9, "665886975795"), (0, "-37825797469566"), (-2, "-3782579746890011");
    367, Nearest_away, (-1, "688795599875588"), (-3, "698898555996"), (-2, "6888025888611480");
    368, Nearest_away, (-11, "-75432999387568436725"), (0, "-735437544799935588"), (2, "-7354375455542656");
    369, Nearest_away, (397, "82253794294537886728"), (382, "-99695987675688886589"), (-796, "8935141660703064064");
    370, Nearest_away, (388, "-87878958998"), (384, "7887"), (-796, "8935141660703064064");
    371, Nearest_away, (-312, "88998889989989"), (192, "-692422664874538522"), (194, "-6924226648745385");
    372, Nearest_away, (-5, "-8899888"), (-5, "82934472424356387434"), (-1, "8293447242434749");
    373, Nearest_away, (-334, "-889989998899"), (151, "-1"), (136, "-1000000000000000");
    374, Nearest_away, (-9, "-898889899998"), (-3, "494258438536"), (-7, "4942575396461000");
    375, Nearest_away, (-3, "-8988998"), (-14, "-968473665643883"), (-12, "-8998682736656439");
    376, Nearest_away, (-2, "8989889999898998"), (-8, "1011111000111111101"), (-2, "8990901110899109");
    377, Nearest_away, (395, "8989898998888999"), (396, "-989"), (-796, "8935141660703064064");
    378, Nearest_away, (5, "89989"), (-8, "3883"), (-6, "8998900000000039");
    379, Nearest_away, (-318, "0"), (168, "-5792352116864640"), (168, "-5792352116864640");
    380, Nearest_away, (5, "-8"), (2, "2737"), (2, "-5263");
    381, Nearest_away, (-373, "-9252553656432"), (-123, "10110000"), (-131, "1011000000000000");
    382, Nearest_away, (-13, "-96658887796668"), (-1, "8697858"), (-10, "8697761341112203");
    383, Nearest_away, (261, "-98696677"), (-276, "-10111000001011111"), (253, "-9869667700000000");
    384, Nearest_away, (3, "-98855"), (-9, "-85588"), (-8, "-9885500000008559");
    385, Nearest_away, (-8, "98989"), (4, "98998"), (-7, "9899800000009899");
    386, Nearest_away, (-2, "998988989888988999"), (-4, "-88988888"), (0, "9989889898880991");
    387, Nearest_away, (5, "-9998"), (-8, "-97588"), (-7, "-9998000000009759");
    388, Nearest_away, (-30, "0"), (189, "8915833240498900"), (189, "8915833240498900");
    389, Nearest_away, (23, "-6528062615241865"), (-104, "0"), (23, "-6528062615241865");
    390, Nearest_away, (305, "0"), (313, "4909375315359657"), (313, "4909375315359657");
    391, Nearest_away, (0, "0"), (0, "0"), (-796, "8646911284551352320");
    392, Nearest_away, (0, "0"), (0, "0"), (-796, "576460752303423488");
    393, Nearest_away, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    394, Nearest_away, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    395, Nearest_away, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    396, Nearest_away, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    397, Nearest_away, (0, "0"), (0, "0"), (-796, "8935141660703064064");
    398, Nearest_away, (0, "0"), (0, "0"), (-796, "8935141660703064064");
  ]

let desc = desc ~radix:10 ~expn_bits:15 54
let create64 (expn, frac) =
  create desc ~expn:(Z.of_int expn) (Z.of_string frac)

type gfloat = Gfloat.t
type binop = ?rm:rounding -> gfloat -> gfloat -> gfloat

let apply_binop (f : binop) ctxt (i, rm, (e1, frac1), (e2, frac2), (er, fracr)) =
  (* if i < 11 then () *)
  (* else *)
  let op1 = create64 (e1, frac1) in
  let op2 = create64 (e2, frac2) in
  let res = f ~rm op1 op2 in
  match fin res with
  | None -> assert_bool (sprintf "failed test # %d" i) false
  | Some (e,f) ->
    let f = if is_neg res then Z.neg f else f in
    printf "passing %d ... \n" i;
    if i = 11 then
      begin
        printf "got : %d, %s\n" (Z.to_int e) (Z.to_string f);
        printf "want: %d, %s\n" er fracr;
      end;


    assert_equal ~ctxt ~cmp:Int.equal (Z.to_int e) er;
    assert_equal ~ctxt ~cmp:String.equal (Z.to_string f) fracr

let run (f, cases) ctxt =
  List.iter ~f:(apply_binop f ctxt) cases

let suite () =

  "Gfloat test" >::: [
    "run add64" >:: run add64_cases;

  ]

let () = run_test_tt_main (suite ())
